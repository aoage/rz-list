@page "/users/create"
@using Microsoft.EntityFrameworkCore
@using Models.Entities
@using System.ComponentModel.DataAnnotations
@using System.Reflection
@inject IDbContextFactory<Data.RzListDbContext> DbFactory
@inject NavigationManager NavigationManager
@inject ILogger<Create> Logger

<PageTitle>Create</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="mt-4">
    <MudText Typo="Typo.h3" GutterBottom="true">Create New User</MudText>

    <EditForm Model="@User" OnValidSubmit="OnValidSubmit" Class="mb-4">
        <DataAnnotationsValidator />
        <MudCard>
            <MudCardContent>
                <MudGrid>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="Username"
                            HelperText="@GetHelperText(nameof(User.UserName), "User's login name")"
                            @bind-Value="User.UserName" For="@(() => User.UserName)" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="Email"
                            HelperText="@GetHelperText(nameof(User.Email), "User's email address")"
                            @bind-Value="User.Email" For="@(() => User.Email)" InputType="InputType.Email" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudSelect T="UserPermissions" Label="Permissions"
                            HelperText="@GetHelperText(nameof(User.Permissions), "User's permission level")"
                            @bind-Value="User.Permissions" For="@(() => User.Permissions)">
                            <MudSelectItem Value="@UserPermissions.BasicUser">Basic User</MudSelectItem>
                            <MudSelectItem Value="@UserPermissions.BookModerator">Book Moderator</MudSelectItem>
                            <MudSelectItem Value="@UserPermissions.UserModerator">User Moderator</MudSelectItem>
                            <MudSelectItem Value="@UserPermissions.Administrator">Administrator</MudSelectItem>
                        </MudSelect>
                    </MudItem>
                </MudGrid>
            </MudCardContent>
            <MudCardActions>
                <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary"
                    Class="ml-auto">Create User</MudButton>
            </MudCardActions>
        </MudCard>
    </EditForm>

    @if (error)
    {
        <MudAlert Severity="Severity.Error" Class="mt-4">
            An error occurred while creating the user. Please try again.
        </MudAlert>
    }

    <MudLink Href="/users" Class="mt-4">Back to List</MudLink>
</MudContainer>

@code {
    [SupplyParameterFromForm]
    private User User { get; set; } = new();
    bool error = false;

    private string GetHelperText(string propertyName, string baseText)
    {
        var property = typeof(User).GetProperty(propertyName);
        var isRequired = property?.GetCustomAttribute<RequiredAttribute>() != null;

        return isRequired ? $"{baseText} (required)" : baseText;
    }

    private async Task OnValidSubmit(EditContext context)
    {
        try
        {
            using var dbContext = DbFactory.CreateDbContext();
            User.DateCreated = DateTime.UtcNow;
            dbContext.Users.Add(User);
            await dbContext.SaveChangesAsync();
            error = false;
            StateHasChanged();
            NavigationManager.NavigateTo("/users");
        }
        catch (Exception e)
        {
            error = true;
            Logger.LogError(e, "Error creating user");
            StateHasChanged();
        }
    }
}
