@page "/users/delete"
@using Microsoft.EntityFrameworkCore
@using RzList.Models
@inject IDbContextFactory<RzList.Data.RzListDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="mt-4">
    <MudText Typo="Typo.h3" GutterBottom="true">Delete User</MudText>
    <MudCard Class="mb-4">
        <MudCardContent>
            <MudText Class="mb-2">Are you sure you want to delete this?</MudText>
            @if (user is null)
            {
                <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
                <MudText>Loading...</MudText>
            }
            else
            {
                <MudGrid>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="ID" Value="@user.Id.ToString()" ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="Username" @bind-Value="user.Username" ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="Email" @bind-Value="user.Email" ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="Date Created" Value="@user.DateCreated.ToString("yyyy-MM-dd HH:mm:ss")"
                            ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="Permissions" Value="@user.Permissions.ToString()" ReadOnly="true" />
                    </MudItem>
                </MudGrid>
            }
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(user is null)"
                Href="@(user is not null ? $"/users/edit?id={user.Id}" : null)" Class="ml-auto">
                Edit
            </MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Error" Disabled="@(user is null)" OnClick="DeleteUser"
                Class="ml-2">
                Delete
            </MudButton>
        </MudCardActions>
    </MudCard>
    <MudLink Href="/users" Class="mt-4">Back to List</MudLink>
</MudContainer>

@code {
    private User? user;

    [SupplyParameterFromQuery]
    private Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        user = await context.Users.FirstOrDefaultAsync(m => m.Id == Id);

        if (user is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteUser()
    {
        using var context = DbFactory.CreateDbContext();
        context.Users.Remove(user!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/users");
    }
}
