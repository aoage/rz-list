@page "/books/details"
@using Microsoft.EntityFrameworkCore
@using Models.Entities
@inject IDbContextFactory<Data.RzListDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="mt-4">
    <MudText Typo="Typo.h3" GutterBottom="true">Book Details</MudText>

    <MudCard Class="mb-4">
        <MudCardContent>
            @if (book is null)
            {
                <p><em>Loading...</em></p>
            }
            else
            {
                <MudGrid>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="Title" @bind-Value="book.Title" ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="Author" @bind-Value="book.Author" ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="ISBN" @bind-Value="book.ISBN" ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudDatePicker Label="Published Date" @bind-Date="book.PublishedDate" ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12">
                        <MudTextField Label="Description" @bind-Value="book.Description" ReadOnly="true" Lines="3" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudNumericField Label="Character Count" @bind-Value="book.CharacterCount" ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="Genre" @bind-Value="book.Genre" ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="Publisher" @bind-Value="book.Publisher" ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12">
                        <MudTextField Label="Cover Image URL" @bind-Value="book.CoverImageUrl" ReadOnly="true" />
                    </MudItem>
                </MudGrid>
            }
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(book is null)"
                Href="@(book is not null ? $"/books/edit?id={book.Id}" : null)" Class="ml-auto">
                Edit
            </MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Error" Disabled="@(book is null)"
                Href="@(book is not null ? $"/books/delete?id={book.Id}" : null)" Class="ml-2">
                Delete
            </MudButton>
        </MudCardActions>
    </MudCard>
    <MudLink Href="/books" Class="mt-4">Back to List</MudLink>
</MudContainer>

@code {
    private Book? book;

    [SupplyParameterFromQuery]
    private Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        book = await context.Books.FirstOrDefaultAsync(m => m.Id == Id);

        if (book is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
