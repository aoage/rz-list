@page "/userbooks/details"
@using Microsoft.EntityFrameworkCore
@using Models.Entities
@inject IDbContextFactory<Data.RzListDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Details</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="mt-4">
    <MudText Typo="Typo.h3" GutterBottom="true">Reading List Entry Details</MudText>

    <MudCard Class="mb-4">
        <MudCardContent>
            @if (userbook is null)
            {
                <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
                <MudText>Loading...</MudText>
            }
            else
            {
                <MudGrid>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="User" Value="@userbook.User.Username" ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="User Email" Value="@userbook.User.Email" ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="Book Title" Value="@userbook.Book.Title" ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="Book Author" Value="@userbook.Book.Author" ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="Reading Status" Value="@userbook.Status.ToString()" ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="Rating" Value="@(userbook.Rating?.ToString() ?? "Not rated")"
                            ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="Progress" Value="@(userbook.ProgressPercentage?.ToString("F1") + "%" ?? "0%")"
                            ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="Is Favorite" Value="@(userbook.IsFavorite ? "Yes" : "No")" ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12">
                        <MudTextField Label="Notes" Value="@(userbook.Notes ?? "No notes")" ReadOnly="true" Lines="3" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="Date Added" Value="@userbook.DateAdded.ToString("yyyy-MM-dd HH:mm:ss")"
                            ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="Date Started"
                            Value="@(userbook.DateStarted?.ToString("yyyy-MM-dd HH:mm:ss") ?? "Not started")"
                            ReadOnly="true" />
                    </MudItem>
                    <MudItem xs="12" sm="6" md="4" lg="3">
                        <MudTextField Label="Date Finished"
                            Value="@(userbook.DateFinished?.ToString("yyyy-MM-dd HH:mm:ss") ?? "Not finished")"
                            ReadOnly="true" />
                    </MudItem>
                </MudGrid>
            }
        </MudCardContent>
        <MudCardActions>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" Disabled="@(userbook is null)"
                Href="@(userbook is not null ? $"/userbooks/edit?id={userbook.Id}" : null)" Class="ml-auto">
                Edit
            </MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Error" Disabled="@(userbook is null)"
                Href="@(userbook is not null ? $"/userbooks/delete?id={userbook.Id}" : null)" Class="ml-2">
                Delete
            </MudButton>
        </MudCardActions>
    </MudCard>

    <MudLink Href="/userbooks" Class="mt-4">Back to List</MudLink>
</MudContainer>

@code {
    private UserBook? userbook;

    [SupplyParameterFromQuery]
    private Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        userbook = await context.UserBooks
        .Include(ub => ub.User)
        .Include(ub => ub.Book)
        .FirstOrDefaultAsync(m => m.Id == Id);

        if (userbook is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }
}
