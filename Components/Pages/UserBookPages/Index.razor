@page "/userbooks"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components
@using Models.Entities
@using Data
@implements IAsyncDisposable
@inject IDbContextFactory<Data.RzListDbContext> DbFactory

<PageTitle>Index</PageTitle>

<MudContainer MaxWidth="MaxWidth.ExtraExtraLarge" Class="mt-4">
    <MudText Typo="Typo.h3" GutterBottom="true">User Books</MudText>

    <MudButton Variant="Variant.Filled" Color="Color.Primary" StartIcon="@Icons.Material.Filled.Add"
        Href="userbooks/create" Class="mb-4">
        Create New
    </MudButton>

    <MudDataGrid T="UserBook" Items="@FilteredUserBooks" Filterable="true" SortMode="SortMode.Multiple" Dense="true"
        Hover="true" ReadOnly="true">
        <Columns>
            <TemplateColumn Title="Username" Sortable="true" Filterable="true">
                <CellTemplate>
                    <MudLink Href="@($"users/details?id={context.Item.UserId}")">
                        @context.Item.User.UserName
                    </MudLink>
                </CellTemplate>
            </TemplateColumn>

            <TemplateColumn Title="Book Title" Sortable="true" Filterable="true">
                <CellTemplate>
                    <MudLink Href="@($"books/details?id={context.Item.BookId}")">
                        @context.Item.Book.Title
                    </MudLink>
                </CellTemplate>
            </TemplateColumn>

            <PropertyColumn Property="x => x.Status" Title="Status" />
            <PropertyColumn Property="x => x.Rating" Title="Rating" />
            <PropertyColumn Property="x => x.Notes" Title="Notes" />
            <PropertyColumn Property="x => x.DateAdded" Title="Date Added" />
            <PropertyColumn Property="x => x.DateStarted" Title="Date Started" />
            <PropertyColumn Property="x => x.DateFinished" Title="Date Finished" />
            <PropertyColumn Property="x => x.ProgressPercentage" Title="Progress %" />
            <PropertyColumn Property="x => x.IsFavorite" Title="Favorite" />

            <TemplateColumn Title="Actions" Sortable="false" Filterable="false">
                <CellTemplate>
                    <MudButtonGroup Variant="Variant.Text" Size="Size.Small">
                        <MudButton StartIcon="@Icons.Material.Filled.Edit"
                            Href="@($"userbooks/edit?id={context.Item.Id}")">
                            Edit
                        </MudButton>
                        <MudButton StartIcon="@Icons.Material.Filled.Info"
                            Href="@($"userbooks/details?id={context.Item.Id}")">
                            Details
                        </MudButton>
                        <MudButton StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error"
                            Href="@($"userbooks/delete?id={context.Item.Id}")">
                            Delete
                        </MudButton>
                    </MudButtonGroup>
                </CellTemplate>
            </TemplateColumn>
        </Columns>
    </MudDataGrid>
</MudContainer>

@code {
    private RzListDbContext context = default!;
    private List<UserBook>? FilteredUserBooks;

    protected override async Task OnInitializedAsync()
    {
        context = DbFactory.CreateDbContext();
        FilteredUserBooks = await context.UserBooks
        .Include(ub => ub.User)
        .Include(ub => ub.Book)
        .OrderBy(ub => ub.User.UserName)
        .ThenBy(ub => ub.Book.Title)
        .ToListAsync();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
