@page "/userbooks/delete"
@using Microsoft.EntityFrameworkCore
@using RzList.Models
@inject IDbContextFactory<RzList.Data.RzListDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>UserBook</h2>
    <hr />
    @if (userbook is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">UserId</dt>
            <dd class="col-sm-10">@userbook.UserId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">BookId</dt>
            <dd class="col-sm-10">@userbook.BookId</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Status</dt>
            <dd class="col-sm-10">@userbook.Status</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Rating</dt>
            <dd class="col-sm-10">@userbook.Rating</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Notes</dt>
            <dd class="col-sm-10">@userbook.Notes</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateAdded</dt>
            <dd class="col-sm-10">@userbook.DateAdded</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateStarted</dt>
            <dd class="col-sm-10">@userbook.DateStarted</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateFinished</dt>
            <dd class="col-sm-10">@userbook.DateFinished</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ProgressPercentage</dt>
            <dd class="col-sm-10">@userbook.ProgressPercentage</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IsFavorite</dt>
            <dd class="col-sm-10">@userbook.IsFavorite</dd>
        </dl>
        <EditForm method="post" Model="userbook" OnValidSubmit="DeleteUserBook" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(userbook is null)">Delete</button> |
            <a href="/userbooks">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private UserBook? userbook;

    [SupplyParameterFromQuery]
    private Guid Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        userbook = await context.UserBooks.FirstOrDefaultAsync(m => m.Id == Id);

        if (userbook is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteUserBook()
    {
        using var context = DbFactory.CreateDbContext();
        context.UserBooks.Remove(userbook!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/userbooks");
    }
}
